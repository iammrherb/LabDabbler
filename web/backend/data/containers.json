{
  "containerlab_kinds": [
    {
      "name": "Nokia SR Linux",
      "image": "ghcr.io/nokia/srlinux:latest",
      "kind": "nokia_srlinux",
      "short_kind": "srl",
      "description": "Nokia SR Linux Network OS - Containerized",
      "vendor": "Nokia",
      "category": "containerlab_kinds",
      "subcategory": "nokia",
      "packaging": "container",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "ghcr.io",
      "documentation": "https://learn.srlinux.dev/",
      "config_template": {
        "type": "ixr-d2l",
        "env": {
          "TINI_SUBREAPER": "1"
        },
        "syscalls": [
          "sys_admin",
          "sys_ptrace"
        ],
        "capabilities": [
          "SYS_ADMIN",
          "NET_ADMIN"
        ]
      },
      "supported_versions": [
        "latest",
        "24.10.1",
        "24.7.2",
        "24.3.3"
      ],
      "default_credentials": {
        "username": "admin",
        "password": "NokiaSrl1!"
      }
    },
    {
      "name": "Nokia SR OS",
      "image": "vrnetlab/vr-sros:latest",
      "kind": "nokia_sros",
      "short_kind": "vr-sros",
      "description": "Nokia SR OS - VM-based",
      "vendor": "Nokia",
      "category": "containerlab_kinds",
      "subcategory": "nokia",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-sros/",
      "config_template": {
        "license": "/path/to/license.txt",
        "env": {
          "CONNECTION_MODE": "vrnetlab"
        },
        "syscalls": [
          "sys_admin",
          "sys_resource"
        ],
        "capabilities": [
          "SYS_ADMIN",
          "NET_ADMIN",
          "SYS_RESOURCE"
        ]
      },
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "Nokia SR SIM",
      "image": "nokia/srsim:latest",
      "kind": "nokia_srsim",
      "short_kind": "srsim",
      "description": "Nokia SR OS Simulator - Containerized",
      "vendor": "Nokia",
      "category": "containerlab_kinds",
      "subcategory": "nokia",
      "packaging": "container",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build from Nokia sources",
      "documentation": "https://containerlab.dev/manual/kinds/sros/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "Arista cEOS",
      "image": "ceos:latest",
      "kind": "arista_ceos",
      "short_kind": "ceos",
      "description": "Arista Container EOS - Native Container",
      "vendor": "Arista",
      "category": "containerlab_kinds",
      "subcategory": "arista",
      "packaging": "container",
      "architecture": [
        "amd64"
      ],
      "access": "registration_required",
      "registry": "arista.com (manual download)",
      "documentation": "https://containerlab.dev/manual/kinds/ceos/",
      "download_url": "https://www.arista.com/en/support/software-download",
      "config_template": {
        "env": {
          "CEOS": "1",
          "EOS_PLATFORM": "ceossim",
          "container": "docker"
        },
        "syscalls": [
          "sys_admin"
        ],
        "capabilities": [
          "SYS_ADMIN",
          "NET_ADMIN",
          "SYS_NICE",
          "NET_BROADCAST",
          "SYS_PTRACE"
        ]
      },
      "supported_versions": [
        "latest",
        "4.32.0F",
        "4.31.2F",
        "4.30.5M"
      ],
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "Arista vEOS",
      "image": "vrnetlab/vr-veos:latest",
      "kind": "arista_veos",
      "short_kind": "vr-veos",
      "description": "Arista vEOS Switch - VM-based",
      "vendor": "Arista",
      "category": "containerlab_kinds",
      "subcategory": "arista",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-veos/",
      "config_template": {
        "env": {
          "CONNECTION_MODE": "vrnetlab"
        },
        "syscalls": [
          "sys_admin",
          "sys_resource"
        ],
        "capabilities": [
          "SYS_ADMIN",
          "NET_ADMIN",
          "SYS_RESOURCE"
        ]
      },
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "Juniper cRPD",
      "image": "crpd:latest",
      "kind": "juniper_crpd",
      "short_kind": "crpd",
      "description": "Juniper Containerized Routing Protocol Daemon",
      "vendor": "Juniper",
      "category": "containerlab_kinds",
      "subcategory": "juniper",
      "packaging": "container",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "registration_required",
      "registry": "enterprise-hub.juniper.net",
      "documentation": "https://containerlab.dev/manual/kinds/crpd/",
      "config_template": {
        "env": {
          "CRPD": "1"
        },
        "syscalls": [
          "sys_admin"
        ],
        "capabilities": [
          "SYS_ADMIN",
          "NET_ADMIN",
          "SYS_PTRACE"
        ]
      },
      "default_credentials": {
        "username": "root",
        "password": "admin"
      }
    },
    {
      "name": "Juniper vMX",
      "image": "vrnetlab/vr-vmx:latest",
      "kind": "juniper_vmx",
      "short_kind": "vr-vmx",
      "description": "Juniper vMX Router - VM-based",
      "vendor": "Juniper",
      "category": "containerlab_kinds",
      "subcategory": "juniper",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-vmx/",
      "config_template": {
        "env": {
          "CONNECTION_MODE": "vrnetlab"
        },
        "syscalls": [
          "sys_admin",
          "sys_resource"
        ],
        "capabilities": [
          "SYS_ADMIN",
          "NET_ADMIN",
          "SYS_RESOURCE"
        ]
      },
      "default_credentials": {
        "username": "root",
        "password": "admin"
      }
    },
    {
      "name": "Juniper vQFX",
      "image": "vrnetlab/vr-vqfx:latest",
      "kind": "juniper_vqfx",
      "short_kind": "vr-vqfx",
      "description": "Juniper vQFX Switch - VM-based",
      "vendor": "Juniper",
      "category": "containerlab_kinds",
      "subcategory": "juniper",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-vqfx/",
      "default_credentials": {
        "username": "root",
        "password": "admin"
      }
    },
    {
      "name": "Juniper vSRX",
      "image": "vrnetlab/vr-vsrx:latest",
      "kind": "juniper_vsrx",
      "short_kind": "vr-vsrx",
      "description": "Juniper vSRX Firewall - VM-based",
      "vendor": "Juniper",
      "category": "containerlab_kinds",
      "subcategory": "juniper",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-vsrx/",
      "default_credentials": {
        "username": "root",
        "password": "admin"
      }
    },
    {
      "name": "Juniper vJunos Router",
      "image": "vrnetlab/vr-vjunosrouter:latest",
      "kind": "juniper_vjunosrouter",
      "short_kind": "vr-vjunosrouter",
      "description": "Juniper vJunos Router - VM-based",
      "vendor": "Juniper",
      "category": "containerlab_kinds",
      "subcategory": "juniper",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-vjunosrouter/",
      "default_credentials": {
        "username": "root",
        "password": "admin"
      }
    },
    {
      "name": "Juniper vJunos Switch",
      "image": "vrnetlab/vr-vjunosswitch:latest",
      "kind": "juniper_vjunosswitch",
      "short_kind": "vr-vjunosswitch",
      "description": "Juniper vJunos Switch - VM-based",
      "vendor": "Juniper",
      "category": "containerlab_kinds",
      "subcategory": "juniper",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-vjunosswitch/",
      "default_credentials": {
        "username": "root",
        "password": "admin"
      }
    },
    {
      "name": "Juniper vJunos Evolved",
      "image": "vrnetlab/vr-vjunosevolved:latest",
      "kind": "juniper_vjunosevolved",
      "short_kind": "vr-vjunosevolved",
      "description": "Juniper vJunos Evolved - VM-based",
      "vendor": "Juniper",
      "category": "containerlab_kinds",
      "subcategory": "juniper",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-vjunosevolved/",
      "default_credentials": {
        "username": "root",
        "password": "admin"
      }
    },
    {
      "name": "Cisco XRd",
      "image": "localhost/ios-xr:latest",
      "kind": "cisco_xrd",
      "short_kind": "xrd",
      "description": "Cisco XRd Container Router",
      "vendor": "Cisco",
      "category": "containerlab_kinds",
      "subcategory": "cisco",
      "packaging": "container",
      "architecture": [
        "amd64"
      ],
      "access": "cco_required",
      "registry": "software.cisco.com (manual download)",
      "documentation": "https://containerlab.dev/manual/kinds/xrd/",
      "config_template": {
        "env": {
          "XR_FIRST_BOOT_CONFIG": "/etc/xrd/startup.cfg"
        },
        "syscalls": [
          "sys_admin"
        ],
        "capabilities": [
          "SYS_ADMIN",
          "NET_ADMIN",
          "SYS_PTRACE",
          "NET_RAW"
        ]
      },
      "default_credentials": {
        "username": "clab",
        "password": "clab@123"
      }
    },
    {
      "name": "Cisco XRv9k",
      "image": "vrnetlab/vr-xrv9k:latest",
      "kind": "cisco_xrv9k",
      "short_kind": "vr-xrv9k",
      "description": "Cisco IOS XRv9000 - VM-based",
      "vendor": "Cisco",
      "category": "containerlab_kinds",
      "subcategory": "cisco",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-xrv9k/",
      "default_credentials": {
        "username": "clab",
        "password": "clab@123"
      }
    },
    {
      "name": "Cisco XRv",
      "image": "vrnetlab/vr-xrv:latest",
      "kind": "cisco_xrv",
      "short_kind": "vr-xrv",
      "description": "Cisco IOS XRv Router - VM-based",
      "vendor": "Cisco",
      "category": "containerlab_kinds",
      "subcategory": "cisco",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-xrv/",
      "default_credentials": {
        "username": "clab",
        "password": "clab@123"
      }
    },
    {
      "name": "Cisco CSR 1000v",
      "image": "vrnetlab/vr-csr:latest",
      "kind": "cisco_csr1000v",
      "short_kind": "vr-csr",
      "description": "Cisco CSR 1000v Router - VM-based",
      "vendor": "Cisco",
      "category": "containerlab_kinds",
      "subcategory": "cisco",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-csr/",
      "default_credentials": {
        "username": "clab",
        "password": "clab@123"
      }
    },
    {
      "name": "Cisco Nexus 9000v",
      "image": "vrnetlab/vr-n9kv:latest",
      "kind": "cisco_n9kv",
      "short_kind": "vr-n9kv",
      "description": "Cisco Nexus 9000v Switch - VM-based",
      "vendor": "Cisco",
      "category": "containerlab_kinds",
      "subcategory": "cisco",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-n9kv/",
      "default_credentials": {
        "username": "clab",
        "password": "clab@123"
      }
    },
    {
      "name": "Cisco Catalyst 8000v",
      "image": "vrnetlab/vr-c8000v:latest",
      "kind": "cisco_c8000",
      "short_kind": "c8000",
      "description": "Cisco Catalyst 8000v Router - VM-based",
      "vendor": "Cisco",
      "category": "containerlab_kinds",
      "subcategory": "cisco",
      "packaging": "VM+",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/c8000/",
      "default_credentials": {
        "username": "clab",
        "password": "clab@123"
      }
    },
    {
      "name": "Cisco Catalyst 9000v",
      "image": "vrnetlab/vr-cat9kv:latest",
      "kind": "cisco_cat9kv",
      "short_kind": "vr-cat9kv",
      "description": "Cisco Catalyst 9000v Switch - VM-based",
      "vendor": "Cisco",
      "category": "containerlab_kinds",
      "subcategory": "cisco",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-cat9kv/",
      "default_credentials": {
        "username": "clab",
        "password": "clab@123"
      }
    },
    {
      "name": "Cisco IOL",
      "image": "vrnetlab/cisco_iol:latest",
      "kind": "cisco_iol",
      "short_kind": "iol",
      "description": "Cisco IOS on Linux - Container-based",
      "vendor": "Cisco",
      "category": "containerlab_kinds",
      "subcategory": "cisco",
      "packaging": "container",
      "architecture": [
        "i386"
      ],
      "access": "build_required",
      "registry": "Build with cisco/cisco_iol",
      "documentation": "https://containerlab.dev/manual/kinds/cisco_iol/",
      "default_credentials": {
        "username": "clab",
        "password": "clab@123"
      }
    },
    {
      "name": "Cisco FTDv",
      "image": "vrnetlab/vr-ftdv:latest",
      "kind": "cisco_ftdv",
      "short_kind": "vr-ftdv",
      "description": "Cisco Firepower Threat Defense Virtual - VM-based",
      "vendor": "Cisco",
      "category": "containerlab_kinds",
      "subcategory": "cisco",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-ftdv/",
      "default_credentials": {
        "username": "admin",
        "password": "Admin123"
      }
    },
    {
      "name": "Cumulus VX",
      "image": "cumulus-vx:latest",
      "kind": "cumulus_cvx",
      "short_kind": "cvx",
      "description": "Cumulus VX Switch - Container-based",
      "vendor": "Cumulus Networks",
      "category": "containerlab_kinds",
      "subcategory": "other_vendors",
      "packaging": "container",
      "architecture": [
        "amd64"
      ],
      "access": "registration_required",
      "registry": "NVIDIA Cumulus (manual download)",
      "documentation": "https://containerlab.dev/manual/kinds/cvx/",
      "default_credentials": {
        "username": "cumulus",
        "password": "cumulus"
      }
    },
    {
      "name": "Aruba ArubaOS-CX",
      "image": "vrnetlab/vr-aoscx:latest",
      "kind": "aruba_aoscx",
      "short_kind": "vr-aoscx",
      "description": "Aruba ArubaOS-CX Switch - VM-based",
      "vendor": "Aruba Networks",
      "category": "containerlab_kinds",
      "subcategory": "other_vendors",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-aoscx/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "SONiC",
      "image": "docker-sonic-vs:latest",
      "kind": "sonic",
      "short_kind": "sonic-vs",
      "description": "Microsoft SONiC Virtual Switch",
      "vendor": "Microsoft/SONiC",
      "category": "containerlab_kinds",
      "subcategory": "other_vendors",
      "packaging": "container",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "build_required",
      "registry": "Build from Azure Pipeline",
      "documentation": "https://containerlab.dev/manual/kinds/sonic-vs/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "SONiC VM",
      "image": "vrnetlab/sonic-vm:latest",
      "kind": "sonic_vm",
      "short_kind": "sonic-vm",
      "description": "Microsoft SONiC Virtual Machine",
      "vendor": "Microsoft/SONiC",
      "category": "containerlab_kinds",
      "subcategory": "other_vendors",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/sonic-vm/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "Dell FTOS",
      "image": "vrnetlab/vr-ftosv:latest",
      "kind": "dell_ftos",
      "short_kind": "vr-ftosv",
      "description": "Dell FTOS10v Switch - VM-based",
      "vendor": "Dell Technologies",
      "category": "containerlab_kinds",
      "subcategory": "other_vendors",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-ftosv/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "Dell SONiC",
      "image": "vrnetlab/dell_sonic:latest",
      "kind": "dell_sonic",
      "short_kind": "dell-sonic",
      "description": "Dell SONiC Switch - VM-based",
      "vendor": "Dell Technologies",
      "category": "containerlab_kinds",
      "subcategory": "other_vendors",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/dell_sonic/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "MikroTik RouterOS",
      "image": "vrnetlab/vr-ros:latest",
      "kind": "mikrotik_ros",
      "short_kind": "vr-ros",
      "description": "MikroTik RouterOS - VM-based",
      "vendor": "MikroTik",
      "category": "containerlab_kinds",
      "subcategory": "other_vendors",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-ros/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "Huawei VRP",
      "image": "vrnetlab/huawei_vrp:latest",
      "kind": "huawei_vrp",
      "short_kind": "huawei-vrp",
      "description": "Huawei VRP Router - VM-based",
      "vendor": "Huawei",
      "category": "containerlab_kinds",
      "subcategory": "other_vendors",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/huawei_vrp/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "IPInfusion OcNOS",
      "image": "vrnetlab/ipinfusion-ocnos:latest",
      "kind": "ipinfusion_ocnos",
      "short_kind": "ipinfusion-ocnos",
      "description": "IPInfusion OcNOS Switch - VM-based",
      "vendor": "IPInfusion",
      "category": "containerlab_kinds",
      "subcategory": "other_vendors",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/ipinfusion-ocnos/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "Check Point CloudGuard",
      "image": "vrnetlab/checkpoint_cloudguard:latest",
      "kind": "checkpoint_cloudguard",
      "short_kind": "checkpoint-cloudguard",
      "description": "Check Point CloudGuard Firewall - VM-based",
      "vendor": "Check Point",
      "category": "containerlab_kinds",
      "subcategory": "security",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/checkpoint_cloudguard/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "Fortinet FortiGate",
      "image": "vrnetlab/fortinet_fortigate:latest",
      "kind": "fortinet_fortigate",
      "short_kind": "fortinet-fortigate",
      "description": "Fortinet FortiGate Firewall - VM-based",
      "vendor": "Fortinet",
      "category": "containerlab_kinds",
      "subcategory": "security",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/fortinet_fortigate/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "Palo Alto PAN-OS",
      "image": "vrnetlab/vr-pan:latest",
      "kind": "paloalto_panos",
      "short_kind": "vr-pan",
      "description": "Palo Alto PAN-OS Firewall - VM-based",
      "vendor": "Palo Alto Networks",
      "category": "containerlab_kinds",
      "subcategory": "security",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/vr-pan/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "FD.io VPP",
      "image": "ligato/vpp-base:latest",
      "kind": "fdio_vpp",
      "short_kind": "vpp",
      "description": "FD.io Vector Packet Processing - Container-based",
      "vendor": "FD.io Project",
      "category": "containerlab_kinds",
      "subcategory": "opensource",
      "packaging": "container",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/ligato",
      "documentation": "https://containerlab.dev/manual/kinds/fdio_vpp/",
      "default_credentials": {
        "username": "root",
        "password": "root"
      }
    },
    {
      "name": "6WIND VSR",
      "image": "6wind/6wind-vsr:latest",
      "kind": "6wind_vsr",
      "short_kind": "6wind-vsr",
      "description": "6WIND Virtual Service Router - Container-based",
      "vendor": "6WIND",
      "category": "containerlab_kinds",
      "subcategory": "opensource",
      "packaging": "container",
      "architecture": [
        "amd64"
      ],
      "access": "registration_required",
      "registry": "6WIND Registry",
      "documentation": "https://containerlab.dev/manual/kinds/6wind_vsr/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "RARE/freeRtr",
      "image": "rare/freeRtr:latest",
      "kind": "rare",
      "short_kind": "rare",
      "description": "RARE/freeRtr Router - Container-based",
      "vendor": "RARE Project",
      "category": "containerlab_kinds",
      "subcategory": "opensource",
      "packaging": "container",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/rare",
      "documentation": "https://containerlab.dev/manual/kinds/rare-freertr/",
      "default_credentials": {
        "username": "rare",
        "password": "rare"
      }
    },
    {
      "name": "Keysight ixia-c-one",
      "image": "ghcr.io/open-traffic-generator/ixia-c-one:latest",
      "kind": "keysight_ixia-c-one",
      "short_kind": "ixia-c-one",
      "description": "Keysight Ixia-c-One Traffic Generator",
      "vendor": "Keysight Technologies",
      "category": "containerlab_kinds",
      "subcategory": "specialized",
      "packaging": "container",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "ghcr.io/open-traffic-generator",
      "documentation": "https://containerlab.dev/manual/kinds/keysight_ixia-c-one/",
      "default_credentials": {
        "username": "admin",
        "password": "admin"
      }
    },
    {
      "name": "OpenBSD",
      "image": "vrnetlab/openbsd:latest",
      "kind": "openbsd",
      "short_kind": "openbsd",
      "description": "OpenBSD Operating System - VM-based",
      "vendor": "OpenBSD Project",
      "category": "containerlab_kinds",
      "subcategory": "opensource",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/openbsd/",
      "default_credentials": {
        "username": "root",
        "password": "admin"
      }
    },
    {
      "name": "Linux Container",
      "image": "alpine:latest",
      "kind": "linux",
      "short_kind": "linux",
      "description": "Generic Linux Container",
      "vendor": "Linux Foundation",
      "category": "containerlab_kinds",
      "subcategory": "infrastructure",
      "packaging": "container",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "documentation": "https://containerlab.dev/manual/kinds/linux/",
      "config_template": {
        "env": {
          "CONTAINER_TYPE": "linux"
        },
        "capabilities": [
          "NET_ADMIN"
        ]
      },
      "default_credentials": {
        "username": "root",
        "password": "root"
      }
    },
    {
      "name": "Linux Bridge",
      "image": "busybox:latest",
      "kind": "bridge",
      "short_kind": "bridge",
      "description": "Linux Bridge - Software Bridge",
      "vendor": "Linux Kernel",
      "category": "containerlab_kinds",
      "subcategory": "infrastructure",
      "packaging": "N/A",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "documentation": "https://containerlab.dev/manual/kinds/bridge/",
      "config_template": {
        "capabilities": [
          "NET_ADMIN"
        ]
      }
    },
    {
      "name": "OVS Bridge",
      "image": "openvswitch/ovs:latest",
      "kind": "ovs-bridge",
      "short_kind": "ovs-bridge",
      "description": "OpenVSwitch Bridge - Software Switch",
      "vendor": "Open vSwitch",
      "category": "containerlab_kinds",
      "subcategory": "infrastructure",
      "packaging": "N/A",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/openvswitch",
      "documentation": "https://containerlab.dev/manual/kinds/ovs-bridge/",
      "config_template": {
        "capabilities": [
          "NET_ADMIN",
          "SYS_ADMIN"
        ]
      }
    },
    {
      "name": "External Container",
      "image": "any:latest",
      "kind": "ext-container",
      "short_kind": "ext-container",
      "description": "External Container - Use existing container",
      "vendor": "User-defined",
      "category": "containerlab_kinds",
      "subcategory": "infrastructure",
      "packaging": "container",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "user_defined",
      "registry": "User-defined",
      "documentation": "https://containerlab.dev/manual/kinds/ext-container/"
    },
    {
      "name": "Host",
      "image": "N/A",
      "kind": "host",
      "short_kind": "host",
      "description": "Host System - Connect to host network",
      "vendor": "Host System",
      "category": "containerlab_kinds",
      "subcategory": "infrastructure",
      "packaging": "N/A",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "host_system",
      "registry": "N/A",
      "documentation": "https://containerlab.dev/manual/kinds/host/"
    },
    {
      "name": "Generic VM",
      "image": "any-vm:latest",
      "kind": "generic_vm",
      "short_kind": "generic-vm",
      "description": "Generic Virtual Machine - User-defined VM",
      "vendor": "User-defined",
      "category": "containerlab_kinds",
      "subcategory": "infrastructure",
      "packaging": "VM",
      "architecture": [
        "amd64"
      ],
      "access": "user_defined",
      "registry": "Build with hellt/vrnetlab",
      "documentation": "https://containerlab.dev/manual/kinds/generic_vm/"
    }
  ],
  "portnox": [
    {
      "name": "portnox-tacacs",
      "image": "portnox/portnox-tacacs:latest",
      "description": "Docker image to run Portnox TACACS+ server in a container.",
      "tags": [
        "latest",
        "1.1.52",
        "1.1.51",
        "1.1.50"
      ],
      "pull_count": 14025,
      "star_count": 1,
      "last_updated": "2024-10-31T14:50:29.607316Z",
      "category": "portnox",
      "vendor": "Portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Network device authentication",
      "documentation": "https://docs.portnox.com/"
    },
    {
      "name": "portnox-dhcp",
      "image": "portnox/portnox-dhcp:latest",
      "description": "Portnox DHCP proxy for sending DHCP information from your network equipment to Portnox.",
      "tags": [
        "latest",
        "20250410.1",
        "20221221"
      ],
      "pull_count": 5771,
      "star_count": 0,
      "last_updated": "2025-04-15T08:20:49.176934Z",
      "category": "portnox",
      "vendor": "Portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Network configuration management",
      "documentation": "https://docs.portnox.com/"
    },
    {
      "name": "portnox-radius",
      "image": "portnox/portnox-radius:latest",
      "description": "Portnox local RADIUS proxy for redundancy",
      "tags": [
        "latest",
        "1.1.211",
        "1.1.210",
        "1.1.180",
        "1.1.179",
        "1.1.175",
        "1.1.171",
        "1.1.131"
      ],
      "pull_count": 3284,
      "star_count": 0,
      "last_updated": "2025-07-09T18:25:42.056027Z",
      "category": "portnox",
      "vendor": "Portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Authentication and authorization",
      "documentation": "https://docs.portnox.com/"
    },
    {
      "name": "portnox-siem",
      "image": "portnox/portnox-siem:latest",
      "description": "",
      "tags": [
        "latest",
        "1.0.1021",
        "1.0.1012",
        "1.0.1011"
      ],
      "pull_count": 92,
      "star_count": 0,
      "last_updated": "2025-09-04T13:12:28.148361Z",
      "category": "portnox",
      "vendor": "Portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Security information and event management",
      "documentation": "https://docs.portnox.com/"
    },
    {
      "name": "portnox-unifi-agent",
      "image": "portnox/portnox-unifi-agent:latest",
      "description": "",
      "tags": [
        "latest"
      ],
      "pull_count": 88,
      "star_count": 0,
      "last_updated": "2025-08-27T07:00:40.329886Z",
      "category": "portnox",
      "vendor": "Portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Network device management",
      "documentation": "https://docs.portnox.com/"
    },
    {
      "name": "portnox-autoupdate",
      "image": "portnox/portnox-autoupdate:latest",
      "description": "",
      "tags": [
        "latest",
        "1.2.1000",
        "1.1.1003"
      ],
      "pull_count": 76,
      "star_count": 0,
      "last_updated": "2025-05-27T07:26:58.815531Z",
      "category": "portnox",
      "vendor": "Portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Network access control and security",
      "documentation": "https://docs.portnox.com/"
    },
    {
      "name": "ztna-gateway",
      "image": "portnox/ztna-gateway:latest",
      "description": "",
      "tags": [
        "latest",
        "1.1.1152"
      ],
      "pull_count": 59,
      "star_count": 0,
      "last_updated": "2025-06-23T14:50:37.832637Z",
      "category": "portnox",
      "vendor": "Portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Zero trust network access",
      "documentation": "https://docs.portnox.com/"
    },
    {
      "name": "local-radius",
      "image": "portnox/local-radius:latest",
      "description": "Local RADIUS server for network authentication",
      "tags": [
        "latest"
      ],
      "vendor": "Portnox",
      "category": "portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Authentication and authorization",
      "documentation": "https://docs.portnox.com/"
    },
    {
      "name": "tacacs",
      "image": "portnox/tacacs:latest",
      "description": "TACACS+ server for network device access control",
      "tags": [
        "latest"
      ],
      "vendor": "Portnox",
      "category": "portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Network device authentication",
      "documentation": "https://docs.portnox.com/"
    },
    {
      "name": "dhcp",
      "image": "portnox/dhcp:latest",
      "description": "DHCP server with network access control integration",
      "tags": [
        "latest"
      ],
      "vendor": "Portnox",
      "category": "portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Network configuration management",
      "documentation": "https://docs.portnox.com/"
    },
    {
      "name": "ztna-gateway",
      "image": "portnox/ztna-gateway:latest",
      "description": "",
      "tags": [
        "latest",
        "1.1.1152"
      ],
      "pull_count": 59,
      "star_count": 0,
      "last_updated": "2025-06-23T14:50:37.832637Z",
      "category": "portnox",
      "vendor": "Portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Zero trust network access",
      "documentation": "https://docs.portnox.com/"
    },
    {
      "name": "unifi-agent",
      "image": "portnox/unifi-agent:latest",
      "description": "UniFi network integration agent",
      "tags": [
        "latest"
      ],
      "vendor": "Portnox",
      "category": "portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Network device management",
      "documentation": "https://docs.portnox.com/"
    },
    {
      "name": "siem-collector",
      "image": "portnox/siem-collector:latest",
      "description": "Security event collection and forwarding",
      "tags": [
        "latest"
      ],
      "vendor": "Portnox",
      "category": "portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Security information and event management",
      "documentation": "https://docs.portnox.com/"
    },
    {
      "name": "network-scanner",
      "image": "portnox/network-scanner:latest",
      "description": "Network discovery and device profiling",
      "tags": [
        "latest"
      ],
      "vendor": "Portnox",
      "category": "portnox",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "use_case": "Network discovery and security scanning",
      "documentation": "https://docs.portnox.com/"
    }
  ],
  "network_os_native": [
    {
      "name": "Nokia SR Linux (Latest)",
      "image": "ghcr.io/nokia/srlinux:latest",
      "kind": "nokia_srlinux",
      "description": "Nokia SR Linux Network OS - Latest Release",
      "vendor": "Nokia",
      "category": "network_os_native",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "ghcr.io",
      "documentation": "https://learn.srlinux.dev/"
    },
    {
      "name": "Nokia SR Linux 24.10.1",
      "image": "ghcr.io/nokia/srlinux:24.10.1",
      "kind": "nokia_srlinux",
      "description": "Nokia SR Linux - ARM64 Native with Universal Support",
      "vendor": "Nokia",
      "category": "network_os_native",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "ghcr.io",
      "features": [
        "ARM64 native",
        "NETCONF enabled",
        "gRPC server"
      ]
    },
    {
      "name": "Nokia SR Linux 24.7.2",
      "image": "ghcr.io/nokia/srlinux:24.7.2",
      "kind": "nokia_srlinux",
      "description": "Nokia SR Linux - Stable Release with NETCONF",
      "vendor": "Nokia",
      "category": "network_os_native",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "ghcr.io",
      "features": [
        "NETCONF port 830",
        "Enhanced security"
      ]
    },
    {
      "name": "Arista cEOS (Latest)",
      "image": "ceos:latest",
      "kind": "arista_ceos",
      "description": "Arista Container EOS - Latest Release",
      "vendor": "Arista",
      "category": "network_os_native",
      "architecture": [
        "amd64"
      ],
      "access": "registration_required",
      "registry": "arista.com (manual download)",
      "download_url": "https://www.arista.com/en/support/software-download",
      "requirements": "Arista.com account required",
      "installation_notes": "Download tar.xz file and import with docker load"
    },
    {
      "name": "Arista cEOS 4.32.0F",
      "image": "ceos:4.32.0F",
      "kind": "arista_ceos",
      "description": "Arista Container EOS - Stable 4.32.0F",
      "vendor": "Arista",
      "category": "network_os_native",
      "architecture": [
        "amd64"
      ],
      "access": "registration_required",
      "registry": "arista.com (manual download)"
    },
    {
      "name": "Cisco XRd Control Plane",
      "image": "localhost/ios-xr:latest",
      "kind": "cisco_xrd",
      "description": "Cisco XRd Control Plane Router",
      "vendor": "Cisco",
      "category": "network_os_native",
      "architecture": [
        "amd64"
      ],
      "access": "cco_required",
      "registry": "software.cisco.com (manual download)",
      "requirements": "Active Cisco service contract required",
      "installation_notes": "Download from CCO and docker load locally"
    },
    {
      "name": "Cisco XRd vRouter",
      "image": "localhost/xrd-vrouter:latest",
      "kind": "cisco_xrd",
      "description": "Cisco XRd vRouter with Data Plane",
      "vendor": "Cisco",
      "category": "network_os_native",
      "architecture": [
        "amd64"
      ],
      "access": "cco_required",
      "registry": "software.cisco.com (manual download)"
    },
    {
      "name": "Juniper cRPD Latest",
      "image": "enterprise-hub.juniper.net:443/crpd-docker-prod/crpd:latest",
      "kind": "juniper_crpd",
      "description": "Juniper Containerized Routing Protocol Daemon",
      "vendor": "Juniper",
      "category": "network_os_native",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "enterprise_required",
      "registry": "enterprise-hub.juniper.net",
      "requirements": "Juniper enterprise account required",
      "features": [
        "Full Junos CLI",
        "BGP/OSPF/ISIS support",
        "ARM64 support"
      ]
    },
    {
      "name": "Juniper cRPD 24.2R1.14",
      "image": "enterprise-hub.juniper.net:443/crpd-docker-prod/crpd:24.2R1.14",
      "kind": "juniper_crpd",
      "description": "Juniper cRPD - Stable 24.2R1.14 Release",
      "vendor": "Juniper",
      "category": "network_os_native",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "enterprise_required",
      "registry": "enterprise-hub.juniper.net"
    }
  ],
  "network_os_vm_based": [
    {
      "name": "Nokia SR-OS (vSIM)",
      "image": "vrnetlab/vr-sros:latest",
      "kind": "nokia_sros",
      "description": "Nokia SR-OS Virtual SIM - VM-based",
      "vendor": "Nokia",
      "category": "network_os_vm_based",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "requirements": "Nokia SR-OS qcow2 image required",
      "build_info": "Use hellt/vrnetlab project to build"
    },
    {
      "name": "Juniper vMX",
      "image": "vrnetlab/vr-vmx:latest",
      "kind": "juniper_vmx",
      "description": "Juniper vMX Router - VM-based",
      "vendor": "Juniper",
      "category": "network_os_vm_based",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab"
    },
    {
      "name": "Juniper vQFX",
      "image": "vrnetlab/vr-vqfx:latest",
      "kind": "juniper_vqfx",
      "description": "Juniper vQFX Switch - VM-based",
      "vendor": "Juniper",
      "category": "network_os_vm_based",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab"
    },
    {
      "name": "Juniper vSRX",
      "image": "vrnetlab/vr-vsrx:latest",
      "kind": "juniper_vsrx",
      "description": "Juniper vSRX Firewall - VM-based",
      "vendor": "Juniper",
      "category": "network_os_vm_based",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab"
    },
    {
      "name": "Cisco IOS XRv9k",
      "image": "vrnetlab/vr-xrv9k:latest",
      "kind": "cisco_xrv9k",
      "description": "Cisco IOS XRv9000 - VM-based",
      "vendor": "Cisco",
      "category": "network_os_vm_based",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab"
    },
    {
      "name": "Cisco Nexus 9000v",
      "image": "vrnetlab/vr-n9kv:latest",
      "kind": "cisco_n9kv",
      "description": "Cisco Nexus 9000v Switch - VM-based",
      "vendor": "Cisco",
      "category": "network_os_vm_based",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab"
    },
    {
      "name": "Cisco CSR 1000v",
      "image": "vrnetlab/vr-csr:latest",
      "kind": "cisco_csr1000v",
      "description": "Cisco CSR 1000v Router - VM-based",
      "vendor": "Cisco",
      "category": "network_os_vm_based",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab"
    },
    {
      "name": "Arista vEOS",
      "image": "vrnetlab/vr-veos:latest",
      "kind": "arista_veos",
      "description": "Arista vEOS Switch - VM-based",
      "vendor": "Arista",
      "category": "network_os_vm_based",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab"
    },
    {
      "name": "MikroTik RouterOS CHR (Stable)",
      "image": "docker.io/iparchitechs/chr:stable",
      "kind": "mikrotik_ros",
      "description": "MikroTik RouterOS CHR - Stable Release",
      "vendor": "MikroTik",
      "category": "network_os_vm_based",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/iparchitechs",
      "features": [
        "Pre-built images",
        "Multiple versions available"
      ]
    },
    {
      "name": "MikroTik RouterOS CHR (Long-term)",
      "image": "docker.io/iparchitechs/chr:long-term",
      "kind": "mikrotik_ros",
      "description": "MikroTik RouterOS CHR - Long-term Support",
      "vendor": "MikroTik",
      "category": "network_os_vm_based",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/iparchitechs"
    }
  ],
  "open_source_network": [
    {
      "name": "FRRouting (Latest)",
      "image": "frrouting/frr:latest",
      "kind": "linux",
      "description": "FRRouting Protocol Suite - Latest",
      "vendor": "FRRouting Project",
      "category": "open_source_network",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/frrouting",
      "protocols": [
        "BGP",
        "OSPF",
        "ISIS",
        "RIP",
        "EIGRP",
        "PIM"
      ],
      "documentation": "https://docs.frrouting.org/"
    },
    {
      "name": "FRRouting 10.1",
      "image": "frrouting/frr:v10.1.0",
      "kind": "linux",
      "description": "FRRouting 10.1 - Stable Release",
      "vendor": "FRRouting Project",
      "category": "open_source_network",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/frrouting"
    },
    {
      "name": "VyOS Rolling",
      "image": "vyos/vyos:1.4-rolling",
      "kind": "vyos",
      "description": "VyOS Router - Rolling Release",
      "vendor": "VyOS",
      "category": "open_source_network",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/vyos",
      "features": [
        "Linux-based",
        "Enterprise features",
        "CLI similar to Vyatta"
      ]
    },
    {
      "name": "VyOS 1.4 LTS",
      "image": "vyos/vyos:1.4-lts",
      "kind": "vyos",
      "description": "VyOS Router - Long Term Support",
      "vendor": "VyOS",
      "category": "open_source_network",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/vyos"
    },
    {
      "name": "SONiC Virtual Switch",
      "image": "docker-sonic-vs:latest",
      "kind": "sonic-vs",
      "description": "Microsoft SONiC - Virtual Switch Container",
      "vendor": "Microsoft/SONiC",
      "category": "open_source_network",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "build_required",
      "registry": "Build from Azure Pipeline",
      "requirements": "Download from sonic-build.azurewebsites.net",
      "features": [
        "Cloud-scale networking",
        "Redis-based state",
        "Modular containers"
      ]
    },
    {
      "name": "OpenWrt Latest",
      "image": "openwrt/rootfs:latest",
      "kind": "linux",
      "description": "OpenWrt Router OS - Container Rootfs",
      "vendor": "OpenWrt Project",
      "category": "open_source_network",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/openwrt",
      "features": [
        "Lightweight",
        "Embedded router OS",
        "Package management"
      ]
    }
  ],
  "security_firewalls": [
    {
      "name": "Fortinet FortiGate VM (Latest)",
      "image": "vrnetlab/vr-fortios:latest",
      "kind": "fortinet_fortigate",
      "description": "Fortinet FortiGate Firewall - VM-based",
      "vendor": "Fortinet",
      "category": "security_firewalls",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "requirements": "FortiOS qcow2 image from Fortinet support",
      "build_info": "Requires FortiGate VM license for full functionality",
      "ports": [
        "80:80",
        "443:443"
      ]
    },
    {
      "name": "Fortinet FortiGate 7.0.14",
      "image": "vrnetlab/vr-fortios:7.0.14",
      "kind": "fortinet_fortigate",
      "description": "Fortinet FortiGate 7.0.14 - Tested Version",
      "vendor": "Fortinet",
      "category": "security_firewalls",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab"
    },
    {
      "name": "Palo Alto PAN-OS (Latest)",
      "image": "vrnetlab/vr-pan:latest",
      "kind": "paloalto_panos",
      "description": "Palo Alto PAN-OS Firewall - VM-based",
      "vendor": "Palo Alto Networks",
      "category": "security_firewalls",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab",
      "requirements": "PAN-OS qcow2 image from Palo Alto support portal",
      "features": [
        "Web UI on port 443",
        "SSH access",
        "API support"
      ]
    },
    {
      "name": "Palo Alto PAN-OS 10.2.6",
      "image": "vrnetlab/vr-pan:10.2.6",
      "kind": "paloalto_panos",
      "description": "Palo Alto PAN-OS 10.2.6 - Stable Release",
      "vendor": "Palo Alto Networks",
      "category": "security_firewalls",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab"
    },
    {
      "name": "Check Point CloudGuard",
      "image": "vrnetlab/vr-checkpoint:latest",
      "kind": "checkpoint_cloudguard",
      "description": "Check Point CloudGuard Security Gateway",
      "vendor": "Check Point",
      "category": "security_firewalls",
      "architecture": [
        "amd64"
      ],
      "access": "build_required",
      "registry": "Build with hellt/vrnetlab"
    },
    {
      "name": "pfSense",
      "image": "pfsense/pfsense:latest",
      "kind": "generic_vm",
      "description": "pfSense Firewall - Open Source",
      "vendor": "Netgate/pfSense",
      "category": "security_firewalls",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/pfsense",
      "features": [
        "Open source",
        "Web interface",
        "VPN support"
      ]
    }
  ],
  "security": [
    {
      "name": "kali-linux",
      "image": "kalilinux/kali-rolling:latest",
      "description": "Kali Linux Penetration Testing",
      "category": "security"
    },
    {
      "name": "metasploit",
      "image": "metasploitframework/metasploit-framework:latest",
      "description": "Metasploit Framework",
      "category": "security"
    },
    {
      "name": "nmap",
      "image": "instrumentisto/nmap:latest",
      "description": "Network Discovery and Security Auditing",
      "category": "security"
    },
    {
      "name": "wireshark",
      "image": "linuxserver/wireshark:latest",
      "description": "Network Protocol Analyzer",
      "ports": [
        "3000:3000"
      ],
      "category": "security"
    }
  ],
  "security_pentesting": [
    {
      "name": "Kali Linux",
      "image": "kalilinux/kali-rolling:latest",
      "kind": "linux",
      "description": "Complete penetration testing platform with 600+ tools",
      "vendor": "Kali Linux",
      "category": "security_pentesting",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/kalilinux",
      "ports": [
        "22:22",
        "80:80",
        "443:443"
      ],
      "tools": [
        "nmap",
        "metasploit",
        "burpsuite",
        "wireshark",
        "aircrack-ng"
      ],
      "documentation": "https://www.kali.org/docs/containers/"
    },
    {
      "name": "Metasploit Framework",
      "image": "metasploitframework/metasploit-framework:latest",
      "kind": "linux",
      "description": "World's most used penetration testing framework",
      "vendor": "Rapid7",
      "category": "security_pentesting",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/metasploitframework",
      "ports": [
        "4444:4444",
        "8080:8080"
      ],
      "features": [
        "Exploit development",
        "Payload generation",
        "Post-exploitation"
      ]
    },
    {
      "name": "OWASP ZAP",
      "image": "ghcr.io/zaproxy/zaproxy:stable",
      "kind": "linux",
      "description": "OWASP Zed Attack Proxy - Web application security scanner",
      "vendor": "OWASP",
      "category": "security_pentesting",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "ghcr.io/zaproxy",
      "ports": [
        "8080:8080"
      ],
      "features": [
        "Web app scanning",
        "API security testing",
        "Proxy functionality"
      ]
    },
    {
      "name": "Burp Suite Community",
      "image": "portswigger/burp-suite:latest",
      "kind": "linux",
      "description": "Web application security testing platform",
      "vendor": "PortSwigger",
      "category": "security_pentesting",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/portswigger",
      "ports": [
        "8080:8080"
      ]
    },
    {
      "name": "Nmap",
      "image": "instrumentisto/nmap:latest",
      "kind": "linux",
      "description": "Network discovery and security auditing utility",
      "vendor": "Nmap Project",
      "category": "security_pentesting",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/instrumentisto",
      "features": [
        "Port scanning",
        "OS detection",
        "Service enumeration"
      ]
    },
    {
      "name": "Nikto",
      "image": "sullo/nikto:latest",
      "kind": "linux",
      "description": "Web server scanner for vulnerabilities",
      "vendor": "CIRT.net",
      "category": "security_pentesting",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/sullo"
    },
    {
      "name": "SQLmap",
      "image": "paoloo/sqlmap:latest",
      "kind": "linux",
      "description": "Automatic SQL injection and database takeover tool",
      "vendor": "SQLmap Project",
      "category": "security_pentesting",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/paoloo"
    },
    {
      "name": "Nuclei",
      "image": "projectdiscovery/nuclei:latest",
      "kind": "linux",
      "description": "Fast and customisable vulnerability scanner",
      "vendor": "ProjectDiscovery",
      "category": "security_pentesting",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/projectdiscovery",
      "features": [
        "Template-based scanning",
        "YAML templates",
        "Community templates"
      ]
    }
  ],
  "security_monitoring": [
    {
      "name": "Wazuh",
      "image": "wazuh/wazuh-odfe:latest",
      "kind": "linux",
      "description": "Open source security platform for threat detection and response",
      "vendor": "Wazuh",
      "category": "security_monitoring",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/wazuh",
      "ports": [
        "1514:1514/udp",
        "1515:1515",
        "55000:55000"
      ],
      "features": [
        "SIEM",
        "HIDS",
        "Compliance monitoring",
        "Threat intelligence"
      ]
    },
    {
      "name": "OSSEC HIDS",
      "image": "atomicorp/ossec-docker:latest",
      "kind": "linux",
      "description": "Host-based intrusion detection system",
      "vendor": "Atomicorp",
      "category": "security_monitoring",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/atomicorp",
      "ports": [
        "1514:1514/udp"
      ]
    },
    {
      "name": "Suricata",
      "image": "jasonish/suricata:latest",
      "kind": "linux",
      "description": "Network threat detection engine and IDS/IPS",
      "vendor": "OISF",
      "category": "security_monitoring",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/jasonish",
      "features": [
        "IDS/IPS",
        "Network monitoring",
        "File extraction"
      ]
    },
    {
      "name": "Zeek (Bro)",
      "image": "blacktop/zeek:latest",
      "kind": "linux",
      "description": "Network analysis framework for security monitoring",
      "vendor": "Zeek Project",
      "category": "security_monitoring",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/blacktop",
      "features": [
        "Network analysis",
        "Log generation",
        "Protocol parsing"
      ]
    },
    {
      "name": "Security Onion",
      "image": "securityonionsolutions/securityonion:latest",
      "kind": "linux",
      "description": "Free and open platform for threat hunting and security monitoring",
      "vendor": "Security Onion Solutions",
      "category": "security_monitoring",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/securityonionsolutions",
      "ports": [
        "443:443",
        "7037:7037"
      ],
      "features": [
        "Full packet capture",
        "Network monitoring",
        "Log analysis"
      ]
    },
    {
      "name": "Fail2ban",
      "image": "lscr.io/linuxserver/fail2ban:latest",
      "kind": "linux",
      "description": "Intrusion prevention system that protects against brute-force attacks",
      "vendor": "LinuxServer.io",
      "category": "security_monitoring",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "lscr.io/linuxserver"
    }
  ],
  "services": [
    {
      "name": "FreeRADIUS Server",
      "image": "freeradius/freeradius-server:latest",
      "description": "FreeRADIUS Authentication Server",
      "ports": [
        "1812:1812/udp",
        "1813:1813/udp"
      ],
      "category": "services",
      "protocols": [
        "RADIUS",
        "802.1X",
        "EAP"
      ],
      "access": "public",
      "registry": "docker.io/freeradius"
    },
    {
      "name": "BIND9 DNS Server",
      "image": "internetsystemsconsortium/bind9:latest",
      "description": "BIND9 DNS Server - Internet Systems Consortium",
      "ports": [
        "53:53/tcp",
        "53:53/udp"
      ],
      "category": "services",
      "protocols": [
        "DNS",
        "DNSSEC"
      ],
      "access": "public",
      "registry": "docker.io/internetsystemsconsortium"
    },
    {
      "name": "ISC DHCP Server",
      "image": "networkboot/dhcpd:latest",
      "description": "ISC DHCP Server for Network Boot",
      "category": "services",
      "protocols": [
        "DHCP",
        "BOOTP"
      ],
      "access": "public",
      "registry": "docker.io/networkboot"
    },
    {
      "name": "TACACS+ Server",
      "image": "dchidell/docker-tacacs:latest",
      "description": "TACACS+ Authentication Server",
      "ports": [
        "49:49/tcp"
      ],
      "category": "services",
      "protocols": [
        "TACACS+"
      ],
      "access": "public",
      "registry": "docker.io/dchidell"
    },
    {
      "name": "TFTP Server",
      "image": "pghalliday/tftp:latest",
      "description": "TFTP Server for Network Devices",
      "ports": [
        "69:69/udp"
      ],
      "category": "services",
      "protocols": [
        "TFTP"
      ],
      "access": "public",
      "registry": "docker.io/pghalliday"
    },
    {
      "name": "NTP Server",
      "image": "cturra/ntp:latest",
      "description": "Network Time Protocol Server",
      "ports": [
        "123:123/udp"
      ],
      "category": "services",
      "protocols": [
        "NTP"
      ],
      "access": "public",
      "registry": "docker.io/cturra"
    }
  ],
  "network_simulation": [
    {
      "name": "GNS3 Server",
      "image": "gns3/gns3server:latest",
      "kind": "linux",
      "description": "GNS3 network simulation server",
      "vendor": "GNS3 Technologies",
      "category": "network_simulation",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/gns3",
      "ports": [
        "3080:3080"
      ],
      "features": [
        "Network emulation",
        "Multi-vendor support",
        "Topology building"
      ]
    },
    {
      "name": "Eve-NG Community",
      "image": "eve-ng/eve-ng:latest",
      "kind": "linux",
      "description": "Emulated Virtual Environment for network simulation",
      "vendor": "Eve-NG",
      "category": "network_simulation",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/eve-ng",
      "ports": [
        "80:80",
        "443:443"
      ]
    },
    {
      "name": "CORE Network Emulator",
      "image": "coreemu/core:latest",
      "kind": "linux",
      "description": "Common Open Research Emulator for network scenarios",
      "vendor": "Boeing",
      "category": "network_simulation",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/coreemu",
      "features": [
        "Wireless simulation",
        "SDN support",
        "Real-time emulation"
      ]
    },
    {
      "name": "Mininet",
      "image": "iwaseyusuke/mininet:latest",
      "kind": "linux",
      "description": "Network emulator for rapid prototyping",
      "vendor": "Stanford University",
      "category": "network_simulation",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/iwaseyusuke",
      "features": [
        "SDN testing",
        "OpenFlow support",
        "Python API"
      ]
    },
    {
      "name": "iPerf3",
      "image": "networkstatic/iperf3:latest",
      "kind": "linux",
      "description": "Network bandwidth measurement tool",
      "vendor": "ESnet",
      "category": "network_simulation",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/networkstatic",
      "ports": [
        "5201:5201"
      ],
      "features": [
        "Throughput testing",
        "TCP/UDP support",
        "Multiple streams"
      ]
    },
    {
      "name": "Ostinato",
      "image": "pstavirs/ostinato:latest",
      "kind": "linux",
      "description": "Packet generator and network traffic analyzer",
      "vendor": "Ostinato",
      "category": "network_simulation",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/pstavirs",
      "features": [
        "Traffic generation",
        "Protocol crafting",
        "Multi-stream"
      ]
    }
  ],
  "network_monitoring": [
    {
      "name": "Wireshark",
      "image": "lscr.io/linuxserver/wireshark:latest",
      "kind": "linux",
      "description": "Network protocol analyzer with web interface",
      "vendor": "Wireshark Foundation",
      "category": "network_monitoring",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "lscr.io/linuxserver",
      "ports": [
        "3000:3000"
      ],
      "features": [
        "Packet capture",
        "Protocol analysis",
        "Web interface"
      ]
    },
    {
      "name": "Cacti",
      "image": "smcline06/cacti:latest",
      "kind": "linux",
      "description": "Complete network graphing solution using RRDTool",
      "vendor": "Cacti Group",
      "category": "network_monitoring",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/smcline06",
      "ports": [
        "80:80",
        "443:443"
      ],
      "features": [
        "SNMP monitoring",
        "Graph generation",
        "Threshold alerts"
      ]
    },
    {
      "name": "LibreNMS",
      "image": "librenms/librenms:latest",
      "kind": "linux",
      "description": "Auto-discovering network monitoring system",
      "vendor": "LibreNMS Community",
      "category": "network_monitoring",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/librenms",
      "ports": [
        "8000:8000"
      ],
      "features": [
        "Auto-discovery",
        "SNMP monitoring",
        "Alerting",
        "API access"
      ]
    },
    {
      "name": "Nagios",
      "image": "jasonrivers/nagios:latest",
      "kind": "linux",
      "description": "Network and infrastructure monitoring system",
      "vendor": "Nagios Enterprises",
      "category": "network_monitoring",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/jasonrivers",
      "ports": [
        "80:80"
      ],
      "features": [
        "Host monitoring",
        "Service checks",
        "Notifications"
      ]
    },
    {
      "name": "Zabbix Server",
      "image": "zabbix/zabbix-server-mysql:latest",
      "kind": "linux",
      "description": "Enterprise-class monitoring solution",
      "vendor": "Zabbix",
      "category": "network_monitoring",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/zabbix",
      "ports": [
        "10051:10051"
      ],
      "features": [
        "SNMP monitoring",
        "Web interface",
        "Distributed monitoring"
      ]
    },
    {
      "name": "PRTG Core Server",
      "image": "paessler/prtg-core-server:latest",
      "kind": "linux",
      "description": "Paessler PRTG Core Server for infrastructure monitoring",
      "vendor": "Paessler AG",
      "category": "network_monitoring",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/paessler",
      "ports": [
        "443:443",
        "8080:8080"
      ]
    },
    {
      "name": "ntopng",
      "image": "ntop/ntopng:latest",
      "kind": "linux",
      "description": "High-speed web-based network traffic monitoring",
      "vendor": "ntop",
      "category": "network_monitoring",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/ntop",
      "ports": [
        "3000:3000"
      ],
      "features": [
        "Real-time monitoring",
        "DPI analysis",
        "Flow collection"
      ]
    }
  ],
  "network_automation": [
    {
      "name": "Ansible",
      "image": "quay.io/ansible/ansible-runner:latest",
      "kind": "linux",
      "description": "Automation platform for configuration management",
      "vendor": "Red Hat",
      "category": "network_automation",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "quay.io/ansible",
      "features": [
        "Agentless",
        "YAML playbooks",
        "Network modules"
      ]
    },
    {
      "name": "AWX (Ansible Tower)",
      "image": "quay.io/ansible/awx:latest",
      "kind": "linux",
      "description": "Web-based interface for Ansible automation",
      "vendor": "Red Hat",
      "category": "network_automation",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "quay.io/ansible",
      "ports": [
        "8080:8080"
      ],
      "features": [
        "Web UI",
        "Job scheduling",
        "RBAC",
        "REST API"
      ]
    },
    {
      "name": "Netbox",
      "image": "netboxcommunity/netbox:latest",
      "kind": "linux",
      "description": "Network documentation and management tool",
      "vendor": "NetBox Community",
      "category": "network_automation",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/netboxcommunity",
      "ports": [
        "8080:8080"
      ],
      "features": [
        "DCIM",
        "IPAM",
        "Circuits",
        "REST API"
      ]
    },
    {
      "name": "Napalm",
      "image": "napalm/base:latest",
      "kind": "linux",
      "description": "Network Automation and Programmability Abstraction Layer with Multivendor support",
      "vendor": "NAPALM Community",
      "category": "network_automation",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/napalm",
      "features": [
        "Multi-vendor support",
        "Configuration management",
        "Python library"
      ]
    },
    {
      "name": "Nornir",
      "image": "nornir/nornir:latest",
      "kind": "linux",
      "description": "Python automation framework with threading and inventory",
      "vendor": "Nornir Community",
      "category": "network_automation",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/nornir",
      "features": [
        "Threading support",
        "Inventory management",
        "Plugin system"
      ]
    },
    {
      "name": "SaltStack",
      "image": "saltstack/salt-master:latest",
      "kind": "linux",
      "description": "Event-driven automation and configuration management",
      "vendor": "VMware",
      "category": "network_automation",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/saltstack",
      "ports": [
        "4505:4505",
        "4506:4506"
      ],
      "features": [
        "Event-driven",
        "Remote execution",
        "Configuration management"
      ]
    }
  ],
  "development": [
    {
      "name": "VS Code Server",
      "image": "lscr.io/linuxserver/code-server:latest",
      "kind": "linux",
      "description": "VS Code running on a remote server, accessible through browser",
      "vendor": "LinuxServer.io",
      "category": "development",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "lscr.io/linuxserver",
      "ports": [
        "8443:8443"
      ],
      "features": [
        "Web-based IDE",
        "Extension support",
        "Terminal access"
      ]
    },
    {
      "name": "Jupyter Notebook",
      "image": "jupyter/base-notebook:latest",
      "kind": "linux",
      "description": "Jupyter notebook server for data science and development",
      "vendor": "Jupyter Project",
      "category": "development",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/jupyter",
      "ports": [
        "8888:8888"
      ],
      "features": [
        "Python notebooks",
        "Data visualization",
        "Interactive computing"
      ]
    },
    {
      "name": "GitLab CE",
      "image": "gitlab/gitlab-ce:latest",
      "kind": "linux",
      "description": "Complete DevOps platform with Git repository management",
      "vendor": "GitLab",
      "category": "development",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/gitlab",
      "ports": [
        "80:80",
        "443:443",
        "22:22"
      ],
      "features": [
        "Git repositories",
        "CI/CD pipelines",
        "Issue tracking"
      ]
    },
    {
      "name": "Gitea",
      "image": "gitea/gitea:latest",
      "kind": "linux",
      "description": "Lightweight Git service with web interface",
      "vendor": "Gitea",
      "category": "development",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/gitea",
      "ports": [
        "3000:3000",
        "2222:22"
      ],
      "features": [
        "Git hosting",
        "Issue tracking",
        "Pull requests"
      ]
    },
    {
      "name": "Portainer",
      "image": "portainer/portainer-ce:latest",
      "kind": "linux",
      "description": "Container management platform with web UI",
      "vendor": "Portainer",
      "category": "development",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/portainer",
      "ports": [
        "9000:9000"
      ],
      "features": [
        "Container management",
        "Stack deployment",
        "Registry management"
      ]
    }
  ],
  "ci_cd": [
    {
      "name": "Jenkins",
      "image": "jenkins/jenkins:lts",
      "kind": "linux",
      "description": "Leading open-source automation server",
      "vendor": "Jenkins Community",
      "category": "ci_cd",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/jenkins",
      "ports": [
        "8080:8080",
        "50000:50000"
      ],
      "features": [
        "Pipeline as code",
        "Plugin ecosystem",
        "Distributed builds"
      ]
    },
    {
      "name": "GitLab Runner",
      "image": "gitlab/gitlab-runner:latest",
      "kind": "linux",
      "description": "GitLab CI/CD job execution agent",
      "vendor": "GitLab",
      "category": "ci_cd",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/gitlab",
      "features": [
        "Docker executor",
        "Kubernetes support",
        "Auto-scaling"
      ]
    },
    {
      "name": "Drone CI",
      "image": "drone/drone:latest",
      "kind": "linux",
      "description": "Container-native continuous delivery platform",
      "vendor": "Drone.io",
      "category": "ci_cd",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/drone",
      "ports": [
        "80:80",
        "443:443"
      ],
      "features": [
        "YAML pipelines",
        "Matrix builds",
        "Plugin system"
      ]
    },
    {
      "name": "TeamCity",
      "image": "jetbrains/teamcity-server:latest",
      "kind": "linux",
      "description": "JetBrains professional CI/CD solution",
      "vendor": "JetBrains",
      "category": "ci_cd",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/jetbrains",
      "ports": [
        "8111:8111"
      ],
      "features": [
        "Build chains",
        "Test reporting",
        "Cloud agents"
      ]
    },
    {
      "name": "Buildkite Agent",
      "image": "buildkite/agent:latest",
      "kind": "linux",
      "description": "Buildkite build agent for CI/CD pipelines",
      "vendor": "Buildkite",
      "category": "ci_cd",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/buildkite",
      "features": [
        "Parallel builds",
        "Artifact management",
        "Dynamic scaling"
      ]
    }
  ],
  "databases": [
    {
      "name": "PostgreSQL",
      "image": "postgres:latest",
      "kind": "linux",
      "description": "Advanced open-source relational database",
      "vendor": "PostgreSQL Global Development Group",
      "category": "databases",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/_/postgres",
      "ports": [
        "5432:5432"
      ],
      "features": [
        "ACID compliance",
        "JSON support",
        "Full-text search"
      ]
    },
    {
      "name": "MySQL",
      "image": "mysql:latest",
      "kind": "linux",
      "description": "Popular open-source relational database",
      "vendor": "Oracle",
      "category": "databases",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/_/mysql",
      "ports": [
        "3306:3306"
      ],
      "features": [
        "High performance",
        "Replication",
        "Clustering"
      ]
    },
    {
      "name": "MongoDB",
      "image": "mongo:latest",
      "kind": "linux",
      "description": "Document-oriented NoSQL database",
      "vendor": "MongoDB Inc.",
      "category": "databases",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/_/mongo",
      "ports": [
        "27017:27017"
      ],
      "features": [
        "Document storage",
        "Horizontal scaling",
        "Rich queries"
      ]
    },
    {
      "name": "Redis",
      "image": "redis:latest",
      "kind": "linux",
      "description": "In-memory data structure store and cache",
      "vendor": "Redis Labs",
      "category": "databases",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/_/redis",
      "ports": [
        "6379:6379"
      ],
      "features": [
        "In-memory storage",
        "Pub/sub",
        "Lua scripting"
      ]
    },
    {
      "name": "InfluxDB",
      "image": "influxdb:latest",
      "kind": "linux",
      "description": "Time series database for IoT and monitoring",
      "vendor": "InfluxData",
      "category": "databases",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/_/influxdb",
      "ports": [
        "8086:8086"
      ],
      "features": [
        "Time series optimization",
        "SQL-like queries",
        "Retention policies"
      ]
    },
    {
      "name": "Elasticsearch",
      "image": "elasticsearch:8.11.0",
      "kind": "linux",
      "description": "Distributed search and analytics engine",
      "vendor": "Elastic",
      "category": "databases",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.elastic.co/elasticsearch",
      "ports": [
        "9200:9200",
        "9300:9300"
      ],
      "features": [
        "Full-text search",
        "Real-time analytics",
        "RESTful API"
      ]
    }
  ],
  "message_queues": [
    {
      "name": "RabbitMQ",
      "image": "rabbitmq:management",
      "kind": "linux",
      "description": "Feature-rich message broker with management UI",
      "vendor": "VMware",
      "category": "message_queues",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/_/rabbitmq",
      "ports": [
        "5672:5672",
        "15672:15672"
      ],
      "features": [
        "AMQP protocol",
        "Management UI",
        "Clustering"
      ]
    },
    {
      "name": "Apache Kafka",
      "image": "confluentinc/cp-kafka:latest",
      "kind": "linux",
      "description": "Distributed event streaming platform",
      "vendor": "Confluent",
      "category": "message_queues",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/confluentinc",
      "ports": [
        "9092:9092"
      ],
      "features": [
        "High throughput",
        "Fault tolerance",
        "Stream processing"
      ]
    },
    {
      "name": "Apache Pulsar",
      "image": "apachepulsar/pulsar:latest",
      "kind": "linux",
      "description": "Cloud-native distributed messaging and streaming",
      "vendor": "Apache Software Foundation",
      "category": "message_queues",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/apachepulsar",
      "ports": [
        "8080:8080",
        "6650:6650"
      ],
      "features": [
        "Multi-tenancy",
        "Geo-replication",
        "Schema registry"
      ]
    },
    {
      "name": "NATS",
      "image": "nats:latest",
      "kind": "linux",
      "description": "High-performance cloud native messaging system",
      "vendor": "NATS.io",
      "category": "message_queues",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/_/nats",
      "ports": [
        "4222:4222",
        "8222:8222"
      ],
      "features": [
        "Lightweight",
        "Request-reply",
        "Streaming"
      ]
    }
  ],
  "web_servers": [
    {
      "name": "Nginx",
      "image": "nginx:latest",
      "kind": "linux",
      "description": "High-performance web server and reverse proxy",
      "vendor": "Nginx Inc.",
      "category": "web_servers",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/_/nginx",
      "ports": [
        "80:80",
        "443:443"
      ],
      "features": [
        "Reverse proxy",
        "Load balancing",
        "SSL termination"
      ]
    },
    {
      "name": "Apache HTTP Server",
      "image": "httpd:latest",
      "kind": "linux",
      "description": "World's most used web server software",
      "vendor": "Apache Software Foundation",
      "category": "web_servers",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/_/httpd",
      "ports": [
        "80:80"
      ],
      "features": [
        "Modular architecture",
        ".htaccess support",
        "Virtual hosts"
      ]
    },
    {
      "name": "Traefik",
      "image": "traefik:latest",
      "kind": "linux",
      "description": "Modern reverse proxy with automatic service discovery",
      "vendor": "Traefik Labs",
      "category": "web_servers",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/_/traefik",
      "ports": [
        "80:80",
        "443:443",
        "8080:8080"
      ],
      "features": [
        "Auto SSL",
        "Service discovery",
        "Load balancing"
      ]
    },
    {
      "name": "HAProxy",
      "image": "haproxy:latest",
      "kind": "linux",
      "description": "Reliable, high-performance load balancer",
      "vendor": "HAProxy Technologies",
      "category": "web_servers",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/_/haproxy",
      "ports": [
        "80:80",
        "443:443"
      ],
      "features": [
        "Load balancing",
        "Health checks",
        "Statistics"
      ]
    }
  ],
  "monitoring_observability": [
    {
      "name": "Prometheus",
      "image": "prom/prometheus:latest",
      "kind": "linux",
      "description": "Monitoring system and time series database",
      "vendor": "Prometheus Community",
      "category": "monitoring_observability",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/prom",
      "ports": [
        "9090:9090"
      ],
      "features": [
        "Time series DB",
        "PromQL queries",
        "Alerting"
      ]
    },
    {
      "name": "Grafana",
      "image": "grafana/grafana:latest",
      "kind": "linux",
      "description": "Analytics and interactive visualization platform",
      "vendor": "Grafana Labs",
      "category": "monitoring_observability",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/grafana",
      "ports": [
        "3000:3000"
      ],
      "features": [
        "Dashboard creation",
        "Data source plugins",
        "Alerting"
      ]
    },
    {
      "name": "Jaeger",
      "image": "jaegertracing/all-in-one:latest",
      "kind": "linux",
      "description": "Distributed tracing platform",
      "vendor": "Jaeger Community",
      "category": "monitoring_observability",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/jaegertracing",
      "ports": [
        "16686:16686",
        "14268:14268"
      ],
      "features": [
        "Distributed tracing",
        "Service map",
        "Performance monitoring"
      ]
    },
    {
      "name": "Zipkin",
      "image": "openzipkin/zipkin:latest",
      "kind": "linux",
      "description": "Distributed tracing system",
      "vendor": "OpenZipkin",
      "category": "monitoring_observability",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/openzipkin",
      "ports": [
        "9411:9411"
      ],
      "features": [
        "Trace collection",
        "Timeline view",
        "Service dependencies"
      ]
    },
    {
      "name": "Logstash",
      "image": "elasticsearch:8.11.0",
      "kind": "linux",
      "description": "Server-side data processing pipeline",
      "vendor": "Elastic",
      "category": "monitoring_observability",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.elastic.co/logstash",
      "ports": [
        "5044:5044",
        "9600:9600"
      ],
      "features": [
        "Data transformation",
        "Multiple inputs",
        "Filter plugins"
      ]
    },
    {
      "name": "Kibana",
      "image": "kibana:8.11.0",
      "kind": "linux",
      "description": "Data visualization dashboard for Elasticsearch",
      "vendor": "Elastic",
      "category": "monitoring_observability",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.elastic.co/kibana",
      "ports": [
        "5601:5601"
      ],
      "features": [
        "Data visualization",
        "Dashboard creation",
        "Search interface"
      ]
    }
  ],
  "analytics": [
    {
      "name": "Apache Spark",
      "image": "bitnami/spark:latest",
      "kind": "linux",
      "description": "Unified analytics engine for large-scale data processing",
      "vendor": "Apache Software Foundation",
      "category": "analytics",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/bitnami",
      "ports": [
        "8080:8080",
        "7077:7077"
      ],
      "features": [
        "Batch processing",
        "Stream processing",
        "ML libraries"
      ]
    },
    {
      "name": "Apache Airflow",
      "image": "apache/airflow:latest",
      "kind": "linux",
      "description": "Platform for workflow automation and scheduling",
      "vendor": "Apache Software Foundation",
      "category": "analytics",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/apache",
      "ports": [
        "8080:8080"
      ],
      "features": [
        "Workflow automation",
        "DAG scheduling",
        "Web interface"
      ]
    },
    {
      "name": "Superset",
      "image": "apache/superset:latest",
      "kind": "linux",
      "description": "Business intelligence web application",
      "vendor": "Apache Software Foundation",
      "category": "analytics",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/apache",
      "ports": [
        "8088:8088"
      ],
      "features": [
        "Data exploration",
        "Dashboard creation",
        "SQL Lab"
      ]
    },
    {
      "name": "Metabase",
      "image": "metabase/metabase:latest",
      "kind": "linux",
      "description": "Business intelligence tool for data visualization",
      "vendor": "Metabase",
      "category": "analytics",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/metabase",
      "ports": [
        "3000:3000"
      ],
      "features": [
        "Query builder",
        "Dashboard sharing",
        "Alert notifications"
      ]
    }
  ],
  "testing_load": [
    {
      "name": "JMeter",
      "image": "justb4/jmeter:latest",
      "kind": "linux",
      "description": "Load testing tool for web applications",
      "vendor": "Apache Software Foundation",
      "category": "testing_load",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io/justb4",
      "features": [
        "Load testing",
        "Performance testing",
        "GUI and CLI"
      ]
    },
    {
      "name": "k6",
      "image": "grafana/k6:latest",
      "kind": "linux",
      "description": "Modern load testing tool for developers",
      "vendor": "Grafana Labs",
      "category": "testing_load",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/grafana",
      "features": [
        "JavaScript scripting",
        "Cloud integration",
        "Developer-centric"
      ]
    },
    {
      "name": "Locust",
      "image": "locustio/locust:latest",
      "kind": "linux",
      "description": "Scalable load testing framework",
      "vendor": "Locust.io",
      "category": "testing_load",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/locustio",
      "ports": [
        "8089:8089"
      ],
      "features": [
        "Web UI",
        "Distributed testing",
        "Python scripting"
      ]
    },
    {
      "name": "Artillery",
      "image": "artilleryio/artillery:latest",
      "kind": "linux",
      "description": "Cloud-scale load testing toolkit",
      "vendor": "Artillery.io",
      "category": "testing_load",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io/artilleryio",
      "features": [
        "Real-time metrics",
        "WebSocket support",
        "Cloud deployment"
      ]
    }
  ],
  "vrnetlab_built": [],
  "bitdoze_media": [
    {
      "name": "Plex Media Server",
      "image": "plexinc/pms-docker:latest",
      "description": "Plex Media Server - Stream your media collection to any device",
      "vendor": "Plex Inc.",
      "category": "bitdoze_media",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Media streaming",
        "Remote access",
        "Mobile sync",
        "Live TV"
      ],
      "documentation": "https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/",
      "use_case": "Personal media streaming and organization"
    },
    {
      "name": "Jellyfin Media Server",
      "image": "jellyfin/jellyfin:latest",
      "description": "Jellyfin - Free and open source media server",
      "vendor": "Jellyfin Team",
      "category": "bitdoze_media",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Open source",
        "No license fees",
        "Hardware acceleration",
        "Live TV"
      ],
      "documentation": "https://jellyfin.org/docs/",
      "use_case": "Open source media streaming alternative to Plex"
    },
    {
      "name": "Sonarr",
      "image": "linuxserver/sonarr:latest",
      "description": "Sonarr - TV series PVR for Usenet and BitTorrent users",
      "vendor": "Sonarr Team",
      "category": "bitdoze_media",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Automatic downloads",
        "Quality profiles",
        "Calendar integration",
        "Notifications"
      ],
      "documentation": "https://wiki.servarr.com/sonarr",
      "use_case": "Automated TV show collection management"
    },
    {
      "name": "Radarr",
      "image": "linuxserver/radarr:latest",
      "description": "Radarr - Movie PVR for Usenet and BitTorrent users",
      "vendor": "Radarr Team",
      "category": "bitdoze_media",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Automatic downloads",
        "Quality profiles",
        "Custom formats",
        "Notifications"
      ],
      "documentation": "https://wiki.servarr.com/radarr",
      "use_case": "Automated movie collection management"
    },
    {
      "name": "Lidarr",
      "image": "linuxserver/lidarr:latest",
      "description": "Lidarr - Music collection manager for Usenet and BitTorrent users",
      "vendor": "Lidarr Team",
      "category": "bitdoze_media",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Music metadata",
        "Artist monitoring",
        "Release profiles",
        "Integration with downloaders"
      ],
      "documentation": "https://wiki.servarr.com/lidarr",
      "use_case": "Automated music collection management"
    },
    {
      "name": "Jackett",
      "image": "linuxserver/jackett:latest",
      "description": "Jackett - API Support for your favorite torrent trackers",
      "vendor": "Jackett Team",
      "category": "bitdoze_media",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Tracker aggregation",
        "API proxy",
        "Search capabilities",
        "Multiple indexers"
      ],
      "documentation": "https://github.com/Jackett/Jackett",
      "use_case": "Torrent indexer proxy for media automation"
    },
    {
      "name": "qBittorrent",
      "image": "linuxserver/qbittorrent:latest",
      "description": "qBittorrent - Free and reliable P2P BitTorrent client",
      "vendor": "qBittorrent Team",
      "category": "bitdoze_media",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Web interface",
        "RSS support",
        "Sequential downloading",
        "IP filtering"
      ],
      "documentation": "https://github.com/qbittorrent/qBittorrent/wiki",
      "use_case": "BitTorrent client with web interface"
    },
    {
      "name": "Transmission",
      "image": "linuxserver/transmission:latest",
      "description": "Transmission - Fast, easy, and free BitTorrent client",
      "vendor": "Transmission Team",
      "category": "bitdoze_media",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Web interface",
        "Lightweight",
        "Cross-platform",
        "Remote access"
      ],
      "documentation": "https://transmissionbt.com/",
      "use_case": "Lightweight BitTorrent client"
    }
  ],
  "bitdoze_file_sharing": [
    {
      "name": "Nextcloud",
      "image": "nextcloud:latest",
      "description": "Nextcloud - A safe home for all your data",
      "vendor": "Nextcloud GmbH",
      "category": "bitdoze_file_sharing",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "File sync",
        "Calendar",
        "Contacts",
        "Office suite",
        "Video calls"
      ],
      "documentation": "https://docs.nextcloud.com/server/latest/admin_manual/installation/system_requirements.html#database-requirements-for-mysql-mariadb",
      "use_case": "Self-hosted cloud storage and collaboration platform"
    },
    {
      "name": "Syncthing",
      "image": "syncthing/syncthing:latest",
      "description": "Syncthing - Continuous file synchronization program",
      "vendor": "Syncthing Foundation",
      "category": "bitdoze_file_sharing",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "P2P sync",
        "Encrypted transfer",
        "Cross-platform",
        "No central server"
      ],
      "documentation": "https://docs.syncthing.net/",
      "use_case": "Decentralized file synchronization"
    },
    {
      "name": "FileBrowser",
      "image": "filebrowser/filebrowser:latest",
      "description": "File Browser - Web File Browser",
      "vendor": "File Browser Team",
      "category": "bitdoze_file_sharing",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Web interface",
        "File management",
        "User management",
        "Sharing"
      ],
      "documentation": "https://filebrowser.org/",
      "use_case": "Simple web-based file management"
    },
    {
      "name": "Seafile",
      "image": "seafileltd/seafile:latest",
      "description": "Seafile - Professional file sync and share solution",
      "vendor": "Seafile Ltd",
      "category": "bitdoze_file_sharing",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Enterprise sync",
        "Version control",
        "Team collaboration",
        "Mobile apps"
      ],
      "documentation": "https://manual.seafile.com/",
      "use_case": "Enterprise-grade file sharing platform"
    },
    {
      "name": "SFTPGo",
      "image": "drakkan/sftpgo:latest",
      "description": "SFTPGo - Fully featured and highly configurable SFTP server",
      "vendor": "SFTPGo Team",
      "category": "bitdoze_file_sharing",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "SFTP/FTP",
        "Web admin",
        "REST API",
        "Virtual folders"
      ],
      "documentation": "https://github.com/drakkan/sftpgo",
      "use_case": "Secure file transfer protocol server"
    }
  ],
  "bitdoze_ai": [
    {
      "name": "Ollama with OpenWebUI",
      "image": "ollama/ollama:latest",
      "description": "Ollama - Get up and running with large language models locally",
      "vendor": "Ollama Team",
      "category": "bitdoze_ai",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Local LLM hosting",
        "Multiple models",
        "API interface",
        "Chat interface"
      ],
      "documentation": "https://github.com/ollama/ollama",
      "use_case": "Self-hosted large language model inference"
    },
    {
      "name": "Flowise",
      "image": "flowiseai/flowise:latest",
      "description": "Flowise - Drag & drop UI to build your customized LLM flow",
      "vendor": "Flowise AI",
      "category": "bitdoze_ai",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Visual workflow",
        "LLM chains",
        "Custom agents",
        "API integration"
      ],
      "documentation": "https://docs.flowiseai.com/",
      "use_case": "Visual LLM workflow builder and automation"
    },
    {
      "name": "Langflow",
      "image": "langflowai/langflow:latest",
      "description": "Langflow - A visual framework for building multi-agent and RAG applications",
      "vendor": "Langflow Team",
      "category": "bitdoze_ai",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Multi-agent systems",
        "RAG applications",
        "Visual interface",
        "Python integration"
      ],
      "documentation": "https://docs.langflow.org/",
      "use_case": "Multi-agent AI application development"
    },
    {
      "name": "Langfuse",
      "image": "langfuse/langfuse:latest",
      "description": "Langfuse - Open source LLM engineering platform",
      "vendor": "Langfuse Team",
      "category": "bitdoze_ai",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "LLM observability",
        "Analytics",
        "Prompt management",
        "Cost tracking"
      ],
      "documentation": "https://langfuse.com/docs",
      "use_case": "LLM application monitoring and analytics"
    },
    {
      "name": "LiteLLM",
      "image": "ghcr.io/berriai/litellm:main-latest",
      "description": "LiteLLM - Call all LLM APIs using the OpenAI format",
      "vendor": "BerriAI",
      "category": "bitdoze_ai",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "ghcr.io",
      "features": [
        "Unified API",
        "Cost tracking",
        "Caching",
        "Load balancing"
      ],
      "documentation": "https://litellm.vercel.app/",
      "use_case": "Unified interface for multiple LLM providers"
    }
  ],
  "bitdoze_home_automation": [
    {
      "name": "Home Assistant",
      "image": "ghcr.io/home-assistant/home-assistant:stable",
      "description": "Home Assistant - Open source home automation platform",
      "vendor": "Home Assistant Team",
      "category": "bitdoze_home_automation",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "ghcr.io",
      "features": [
        "Device integration",
        "Automation",
        "Mobile apps",
        "Voice control"
      ],
      "documentation": "https://www.home-assistant.io/docs/",
      "use_case": "Comprehensive home automation and IoT management"
    },
    {
      "name": "Node-RED",
      "image": "nodered/node-red:latest",
      "description": "Node-RED - Low-code programming for event-driven applications",
      "vendor": "Node-RED Team",
      "category": "bitdoze_home_automation",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Visual programming",
        "IoT integration",
        "API connections",
        "Custom flows"
      ],
      "documentation": "https://nodered.org/docs/",
      "use_case": "Visual automation workflow builder"
    },
    {
      "name": "Mosquitto MQTT Broker",
      "image": "eclipse-mosquitto:latest",
      "description": "Eclipse Mosquitto - Open source MQTT broker",
      "vendor": "Eclipse Foundation",
      "category": "bitdoze_home_automation",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "MQTT protocol",
        "Lightweight",
        "SSL/TLS support",
        "WebSockets"
      ],
      "documentation": "https://mosquitto.org/documentation/",
      "use_case": "Message broker for IoT device communication"
    },
    {
      "name": "OpenHAB",
      "image": "openhab/openhab:latest",
      "description": "openHAB - Vendor and technology agnostic home automation platform",
      "vendor": "openHAB Foundation",
      "category": "bitdoze_home_automation",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Device integration",
        "Rule engine",
        "Web interface",
        "Mobile apps"
      ],
      "documentation": "https://www.openhab.org/docs/",
      "use_case": "Open source home automation platform"
    }
  ],
  "bitdoze_network": [
    {
      "name": "Pi-hole",
      "image": "pihole/pihole:latest",
      "description": "Pi-hole - Network-wide Ad Blocking",
      "vendor": "Pi-hole LLC",
      "category": "bitdoze_network",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "DNS filtering",
        "Ad blocking",
        "Network stats",
        "Custom blocklists"
      ],
      "documentation": "https://docs.pi-hole.net/",
      "use_case": "Network-wide advertisement and tracker blocking"
    },
    {
      "name": "Unbound",
      "image": "nlnetlabs/unbound:latest",
      "description": "Unbound - Validating, recursive, caching DNS resolver",
      "vendor": "NLnet Labs",
      "category": "bitdoze_network",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "DNS resolution",
        "DNSSEC validation",
        "Privacy focus",
        "Caching"
      ],
      "documentation": "https://nlnetlabs.nl/projects/unbound/about/",
      "use_case": "Secure and private DNS resolution"
    },
    {
      "name": "Traefik",
      "image": "traefik:latest",
      "description": "Traefik - Modern HTTP reverse proxy and load balancer",
      "vendor": "Traefik Labs",
      "category": "bitdoze_network",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Auto service discovery",
        "Let's Encrypt",
        "Load balancing",
        "Dashboard"
      ],
      "documentation": "https://doc.traefik.io/traefik/",
      "use_case": "Reverse proxy with automatic SSL certificates"
    },
    {
      "name": "Nginx Proxy Manager",
      "image": "jc21/nginx-proxy-manager:latest",
      "description": "Nginx Proxy Manager - Docker container for managing Nginx proxy hosts",
      "vendor": "jc21",
      "category": "bitdoze_network",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Web interface",
        "SSL management",
        "Access lists",
        "Stream forwarding"
      ],
      "documentation": "https://nginxproxymanager.com/guide/",
      "use_case": "Easy web-based Nginx proxy management"
    },
    {
      "name": "Portainer",
      "image": "portainer/portainer-ce:latest",
      "description": "Portainer - Making Docker and Kubernetes management easy",
      "vendor": "Portainer.io",
      "category": "bitdoze_network",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Container management",
        "Web interface",
        "User roles",
        "Template library"
      ],
      "documentation": "https://docs.portainer.io/",
      "use_case": "Docker container management interface"
    },
    {
      "name": "Dockge",
      "image": "louislam/dockge:latest",
      "description": "Dockge - A fancy, easy-to-use and reactive self-hosted docker compose.yaml stack manager",
      "vendor": "Louis Lam",
      "category": "bitdoze_network",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Stack management",
        "Interactive editor",
        "Real-time logs",
        "Terminal access"
      ],
      "documentation": "https://github.com/louislam/dockge",
      "use_case": "Docker Compose stack management"
    }
  ],
  "bitdoze_productivity": [
    {
      "name": "BookStack",
      "image": "linuxserver/bookstack:latest",
      "description": "BookStack - A platform to create documentation/wiki content",
      "vendor": "BookStack Team",
      "category": "bitdoze_productivity",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Wiki system",
        "Documentation",
        "User management",
        "WYSIWYG editor"
      ],
      "documentation": "https://www.bookstackapp.com/docs/",
      "use_case": "Self-hosted wiki and documentation platform"
    },
    {
      "name": "Joplin Server",
      "image": "joplin/server:latest",
      "description": "Joplin Server - Note taking and to-do application with synchronization",
      "vendor": "Joplin Team",
      "category": "bitdoze_productivity",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Note synchronization",
        "End-to-end encryption",
        "Markdown support",
        "Mobile apps"
      ],
      "documentation": "https://joplinapp.org/help/",
      "use_case": "Self-hosted note synchronization server"
    },
    {
      "name": "Stirling PDF",
      "image": "frooodle/s-pdf:latest",
      "description": "Stirling PDF - Web-based PDF manipulation tool",
      "vendor": "Frooodle",
      "category": "bitdoze_productivity",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "PDF editing",
        "Merge/split",
        "OCR",
        "Privacy focused"
      ],
      "documentation": "https://github.com/Frooodle/Stirling-PDF",
      "use_case": "Self-hosted PDF manipulation and processing"
    },
    {
      "name": "Kanboard",
      "image": "kanboard/kanboard:latest",
      "description": "Kanboard - Project management software that focuses on the Kanban methodology",
      "vendor": "Kanboard Team",
      "category": "bitdoze_productivity",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Kanban boards",
        "Task management",
        "Time tracking",
        "Analytics"
      ],
      "documentation": "https://docs.kanboard.org/",
      "use_case": "Self-hosted project management and task tracking"
    },
    {
      "name": "Docmost",
      "image": "docmost/docmost:latest",
      "description": "Docmost - Open-source collaborative wiki and documentation software",
      "vendor": "Docmost Team",
      "category": "bitdoze_productivity",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Collaborative editing",
        "Real-time collaboration",
        "Markdown support",
        "Team workspaces"
      ],
      "documentation": "https://docmost.com/docs",
      "use_case": "Team collaboration and documentation"
    }
  ],
  "bitdoze_backup": [
    {
      "name": "Duplicati",
      "image": "linuxserver/duplicati:latest",
      "description": "Duplicati - Store securely encrypted backups in the cloud",
      "vendor": "Duplicati Team",
      "category": "bitdoze_backup",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Encrypted backups",
        "Cloud storage",
        "Incremental backups",
        "Web interface"
      ],
      "documentation": "https://duplicati.readthedocs.io/",
      "use_case": "Encrypted cloud backup solution"
    },
    {
      "name": "Restic",
      "image": "restic/restic:latest",
      "description": "Restic - Fast, secure, efficient backup program",
      "vendor": "Restic Team",
      "category": "bitdoze_backup",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Deduplication",
        "Encryption",
        "Cross-platform",
        "Multiple backends"
      ],
      "documentation": "https://restic.readthedocs.io/",
      "use_case": "Fast and secure backup solution"
    },
    {
      "name": "Borgmatic",
      "image": "b3vis/borgmatic:latest",
      "description": "Borgmatic - Simple, configuration-driven backup software for servers and workstations",
      "vendor": "BorgBackup Team",
      "category": "bitdoze_backup",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Configuration-driven",
        "Deduplication",
        "Compression",
        "Encryption"
      ],
      "documentation": "https://torsion.org/borgmatic/",
      "use_case": "Automated backup configuration and management"
    }
  ],
  "bitdoze_photography": [
    {
      "name": "PhotoPrism",
      "image": "photoprism/photoprism:latest",
      "description": "PhotoPrism - AI-Powered Photos App for the Decentralized Web",
      "vendor": "PhotoPrism UG",
      "category": "bitdoze_photography",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "AI-powered",
        "Face recognition",
        "Auto-classification",
        "RAW support"
      ],
      "documentation": "https://docs.photoprism.app/",
      "use_case": "Self-hosted photo management with AI features"
    },
    {
      "name": "Lychee",
      "image": "lycheeorg/lychee:latest",
      "description": "Lychee - A great looking and easy-to-use photo-management-system",
      "vendor": "LycheeOrg",
      "category": "bitdoze_photography",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Photo albums",
        "Sharing",
        "EXIF data",
        "Map integration"
      ],
      "documentation": "https://lycheeorg.github.io/docs/",
      "use_case": "Simple and beautiful photo gallery"
    },
    {
      "name": "Immich",
      "image": "ghcr.io/immich-app/immich-server:release",
      "description": "Immich - Self-hosted photo and video backup solution directly from your mobile phone",
      "vendor": "Immich Team",
      "category": "bitdoze_photography",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "ghcr.io",
      "features": [
        "Mobile backup",
        "Face recognition",
        "Machine learning",
        "Live photos"
      ],
      "documentation": "https://immich.app/docs/overview/introduction",
      "use_case": "Google Photos alternative with mobile backup"
    },
    {
      "name": "Piwigo",
      "image": "linuxserver/piwigo:latest",
      "description": "Piwigo - Open source photo gallery software for the web",
      "vendor": "Piwigo Team",
      "category": "bitdoze_photography",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Web gallery",
        "User management",
        "Themes",
        "Plugins"
      ],
      "documentation": "https://piwigo.org/doc",
      "use_case": "Traditional web-based photo gallery"
    }
  ],
  "bitdoze_communication": [
    {
      "name": "Mattermost",
      "image": "mattermost/mattermost-team-edition:latest",
      "description": "Mattermost - Open-source, self-hostable online chat service",
      "vendor": "Mattermost Inc.",
      "category": "bitdoze_communication",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Team chat",
        "File sharing",
        "Integrations",
        "Mobile apps"
      ],
      "documentation": "https://docs.mattermost.com/",
      "use_case": "Self-hosted team communication platform"
    },
    {
      "name": "Jitsi Meet",
      "image": "jitsi/web:latest",
      "description": "Jitsi Meet - Secure, Simple and Scalable Video Conferences",
      "vendor": "Jitsi Team",
      "category": "bitdoze_communication",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Video conferencing",
        "Screen sharing",
        "Recording",
        "No account required"
      ],
      "documentation": "https://jitsi.github.io/handbook/",
      "use_case": "Self-hosted video conferencing solution"
    },
    {
      "name": "Rocket.Chat",
      "image": "rocket.chat:latest",
      "description": "Rocket.Chat - The communications platform that puts data protection first",
      "vendor": "Rocket.Chat",
      "category": "bitdoze_communication",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Team chat",
        "Video calls",
        "File sharing",
        "Marketplace"
      ],
      "documentation": "https://docs.rocket.chat/",
      "use_case": "Enterprise-grade team communication"
    },
    {
      "name": "Matrix Synapse",
      "image": "matrixdotorg/synapse:latest",
      "description": "Synapse - Matrix reference homeserver",
      "vendor": "Matrix.org Foundation",
      "category": "bitdoze_communication",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Decentralized chat",
        "End-to-end encryption",
        "Federation",
        "Bridges"
      ],
      "documentation": "https://matrix-org.github.io/synapse/latest/",
      "use_case": "Decentralized and encrypted communication"
    }
  ],
  "bitdoze_personal_finance": [
    {
      "name": "Firefly III",
      "image": "fireflyiii/core:latest",
      "description": "Firefly III - A personal finances manager",
      "vendor": "Firefly III Team",
      "category": "bitdoze_personal_finance",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Budget tracking",
        "Financial reports",
        "Multi-currency",
        "API access"
      ],
      "documentation": "https://docs.firefly-iii.org/",
      "use_case": "Comprehensive personal finance management"
    },
    {
      "name": "GnuCash",
      "image": "linuxserver/gnucash:latest",
      "description": "GnuCash - Personal and small-business financial-accounting software",
      "vendor": "GnuCash Development Team",
      "category": "bitdoze_personal_finance",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Double-entry bookkeeping",
        "Investment tracking",
        "Reports",
        "Tax preparation"
      ],
      "documentation": "https://www.gnucash.org/docs.phtml",
      "use_case": "Traditional double-entry accounting"
    }
  ],
  "bitdoze_ebooks": [
    {
      "name": "Calibre-web",
      "image": "linuxserver/calibre-web:latest",
      "description": "Calibre-Web - Web app for browsing, reading and downloading eBooks stored in a Calibre database",
      "vendor": "Calibre-Web Team",
      "category": "bitdoze_ebooks",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Web reader",
        "OPDS support",
        "User management",
        "Send to Kindle"
      ],
      "documentation": "https://github.com/janeczku/calibre-web/wiki",
      "use_case": "Web-based e-book library management"
    },
    {
      "name": "COPS",
      "image": "linuxserver/cops:latest",
      "description": "COPS - Calibre OPDS PHP Server",
      "vendor": "COPS Team",
      "category": "bitdoze_ebooks",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "OPDS server",
        "Lightweight",
        "Mobile friendly",
        "Multi-database"
      ],
      "documentation": "https://github.com/seblucas/cops",
      "use_case": "Simple OPDS server for e-book access"
    }
  ],
  "bitdoze_games": [
    {
      "name": "Minecraft Server",
      "image": "itzg/minecraft-server:latest",
      "description": "Minecraft Server - Docker image that provides a Minecraft Server",
      "vendor": "itzg",
      "category": "bitdoze_games",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Multiple versions",
        "Mod support",
        "Plugin support",
        "Easy configuration"
      ],
      "documentation": "https://github.com/itzg/docker-minecraft-server",
      "use_case": "Self-hosted Minecraft multiplayer server"
    },
    {
      "name": "Valheim Server",
      "image": "lloesche/valheim-server:latest",
      "description": "Valheim - Dedicated game server in a Docker container",
      "vendor": "lloesche",
      "category": "bitdoze_games",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Steam integration",
        "Automatic backups",
        "World persistence",
        "BepInEx mod support"
      ],
      "documentation": "https://github.com/lloesche/valheim-server-docker",
      "use_case": "Self-hosted Valheim multiplayer server"
    },
    {
      "name": "Terraria Server",
      "image": "ryshe/terraria:latest",
      "description": "Terraria - Dedicated game server",
      "vendor": "ryshe",
      "category": "bitdoze_games",
      "architecture": [
        "amd64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "World persistence",
        "Configuration options",
        "Multiple players",
        "Mod support"
      ],
      "documentation": "https://github.com/ryshe/docker-terraria",
      "use_case": "Self-hosted Terraria multiplayer server"
    }
  ],
  "bitdoze_dashboards": [
    {
      "name": "Heimdall",
      "image": "linuxserver/heimdall:latest",
      "description": "Heimdall - Application dashboard and launcher",
      "vendor": "LinuxServer.io",
      "category": "bitdoze_dashboards",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Application links",
        "Custom backgrounds",
        "Search integration",
        "Mobile responsive"
      ],
      "documentation": "https://heimdall.site/",
      "use_case": "Personal application dashboard and launcher"
    },
    {
      "name": "Homer",
      "image": "b4bz/homer:latest",
      "description": "Homer - A very simple static homepage for your server services",
      "vendor": "B4bz",
      "category": "bitdoze_dashboards",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Static configuration",
        "Themes",
        "Service monitoring",
        "Search functionality"
      ],
      "documentation": "https://github.com/bastienwirtz/homer",
      "use_case": "Static homepage for server services"
    },
    {
      "name": "Organizr",
      "image": "organizr/organizr:latest",
      "description": "Organizr - HTPC/Homelab Services Organizer",
      "vendor": "Organizr Team",
      "category": "bitdoze_dashboards",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Service integration",
        "User management",
        "SSO support",
        "Custom tabs"
      ],
      "documentation": "https://docs.organizr.app/",
      "use_case": "Comprehensive homelab service organizer"
    }
  ],
  "bitdoze_rss": [
    {
      "name": "FreshRSS",
      "image": "freshrss/freshrss:latest",
      "description": "FreshRSS - A free, self-hostable aggregator for rss feeds",
      "vendor": "FreshRSS Team",
      "category": "bitdoze_rss",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Multi-user",
        "Extensions",
        "Themes",
        "Mobile apps"
      ],
      "documentation": "https://freshrss.github.io/FreshRSS/",
      "use_case": "Self-hosted RSS feed aggregator"
    },
    {
      "name": "Miniflux",
      "image": "miniflux/miniflux:latest",
      "description": "Miniflux - Minimalist and opinionated feed reader",
      "vendor": "Miniflux Team",
      "category": "bitdoze_rss",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Minimalist design",
        "Keyboard shortcuts",
        "Fever API",
        "Integration support"
      ],
      "documentation": "https://miniflux.app/docs/",
      "use_case": "Minimalist RSS feed reader"
    },
    {
      "name": "Tiny Tiny RSS",
      "image": "lunik1/tt-rss:latest",
      "description": "Tiny Tiny RSS - Web-based news feed (RSS/Atom) reader and aggregator",
      "vendor": "Tiny Tiny RSS Team",
      "category": "bitdoze_rss",
      "architecture": [
        "amd64",
        "arm64"
      ],
      "access": "public",
      "registry": "docker.io",
      "features": [
        "Plugin system",
        "Themes",
        "Multi-user",
        "API access"
      ],
      "documentation": "https://tt-rss.org/",
      "use_case": "Feature-rich RSS feed aggregator"
    }
  ],
  "last_updated": "113409.287455656"
}